// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.3
// source: tstock.proto

package tstock

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Candle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period uint64  `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty"`
	Pcg    float32 `protobuf:"fixed32,2,opt,name=pcg,proto3" json:"pcg,omitempty"`
	Pcgp   float32 `protobuf:"fixed32,3,opt,name=pcgp,proto3" json:"pcgp,omitempty"`
	Open   float32 `protobuf:"fixed32,4,opt,name=open,proto3" json:"open,omitempty"`
	Close  float32 `protobuf:"fixed32,5,opt,name=close,proto3" json:"close,omitempty"`
	High   float32 `protobuf:"fixed32,6,opt,name=high,proto3" json:"high,omitempty"`
	Low    float32 `protobuf:"fixed32,7,opt,name=low,proto3" json:"low,omitempty"`
	Volume float32 `protobuf:"fixed32,8,opt,name=volume,proto3" json:"volume,omitempty"`
	Count  uint32  `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Candle) Reset() {
	*x = Candle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tstock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_tstock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_tstock_proto_rawDescGZIP(), []int{0}
}

func (x *Candle) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Candle) GetPcg() float32 {
	if x != nil {
		return x.Pcg
	}
	return 0
}

func (x *Candle) GetPcgp() float32 {
	if x != nil {
		return x.Pcgp
	}
	return 0
}

func (x *Candle) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Candle) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Candle) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Candle) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Candle) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Candle) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Crypto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period    uint64  `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty"`
	Pcg       float32 `protobuf:"fixed32,2,opt,name=pcg,proto3" json:"pcg,omitempty"`
	Pcgp      float32 `protobuf:"fixed32,3,opt,name=pcgp,proto3" json:"pcgp,omitempty"`
	Open      float32 `protobuf:"fixed32,4,opt,name=open,proto3" json:"open,omitempty"`
	Close     float32 `protobuf:"fixed32,5,opt,name=close,proto3" json:"close,omitempty"`
	High      float32 `protobuf:"fixed32,6,opt,name=high,proto3" json:"high,omitempty"`
	Low       float32 `protobuf:"fixed32,7,opt,name=low,proto3" json:"low,omitempty"`
	Weight    float32 `protobuf:"fixed32,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Vol       float32 `protobuf:"fixed32,9,opt,name=vol,proto3" json:"vol,omitempty"`
	Quotal    float32 `protobuf:"fixed32,10,opt,name=quotal,proto3" json:"quotal,omitempty"`
	EventTime uint64  `protobuf:"varint,11,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
}

func (x *Crypto) Reset() {
	*x = Crypto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tstock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Crypto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crypto) ProtoMessage() {}

func (x *Crypto) ProtoReflect() protoreflect.Message {
	mi := &file_tstock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crypto.ProtoReflect.Descriptor instead.
func (*Crypto) Descriptor() ([]byte, []int) {
	return file_tstock_proto_rawDescGZIP(), []int{1}
}

func (x *Crypto) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Crypto) GetPcg() float32 {
	if x != nil {
		return x.Pcg
	}
	return 0
}

func (x *Crypto) GetPcgp() float32 {
	if x != nil {
		return x.Pcgp
	}
	return 0
}

func (x *Crypto) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Crypto) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Crypto) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Crypto) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Crypto) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Crypto) GetVol() float32 {
	if x != nil {
		return x.Vol
	}
	return 0
}

func (x *Crypto) GetQuotal() float32 {
	if x != nil {
		return x.Quotal
	}
	return 0
}

func (x *Crypto) GetEventTime() uint64 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

var File_tstock_proto protoreflect.FileDescriptor

var file_tstock_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x74, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0xc4, 0x01, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x63, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x70, 0x63, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x63, 0x67, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x70, 0x63, 0x67, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf6, 0x01,
	0x0a, 0x06, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x63, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x70,
	0x63, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x63, 0x67, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x70, 0x63, 0x67, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04,
	0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x6f, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x76, 0x6f, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x66, 0x61, 0x63, 0x61, 0x64, 0x65,
	0x2f, 0x74, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tstock_proto_rawDescOnce sync.Once
	file_tstock_proto_rawDescData = file_tstock_proto_rawDesc
)

func file_tstock_proto_rawDescGZIP() []byte {
	file_tstock_proto_rawDescOnce.Do(func() {
		file_tstock_proto_rawDescData = protoimpl.X.CompressGZIP(file_tstock_proto_rawDescData)
	})
	return file_tstock_proto_rawDescData
}

var file_tstock_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tstock_proto_goTypes = []interface{}{
	(*Candle)(nil), // 0: tstock.Candle
	(*Crypto)(nil), // 1: tstock.Crypto
}
var file_tstock_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tstock_proto_init() }
func file_tstock_proto_init() {
	if File_tstock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tstock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tstock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Crypto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tstock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tstock_proto_goTypes,
		DependencyIndexes: file_tstock_proto_depIdxs,
		MessageInfos:      file_tstock_proto_msgTypes,
	}.Build()
	File_tstock_proto = out.File
	file_tstock_proto_rawDesc = nil
	file_tstock_proto_goTypes = nil
	file_tstock_proto_depIdxs = nil
}
